import uigen

ui.shader({
        'name':'alJitterColor',
        'intro':'Applies random color variation within a range.',
        'description':'Use this in a network attached to multiple objects to add random color variation to each object.',
        'output':'rgb',
        'maya_name':'alJitterColor',
        'maya_classification':'utility/color',
        'maya_id':'0x00116416',
        'maya_swatch':True,
        'maya_matte':False,
        'maya_bump':False,
        'c4d_classification':'texture',
        'c4d_menu':'texture',    
        'soft_name':'ALS_JitterColor',
        'soft_classification':'texture',
        'soft_version':1,
        'help_url':'http://www.anderslanglands.com/alshaders/alJitterColor.html',
        'houdini_icon': 'SHELF_temperature_from_texture'
})

ui.parameter('input', 'rgb', (1,1,1), 'Input', description='The input color to be jittered.', mayane=True)

ui.parameter('minSaturation', 'float', 0.5, 'Min Saturation', description='Minimum random saturation scale to apply.', fig='alJitterColor_minSaturation', figc='Min Saturation at [1.0,0.5,0.0]')
ui.parameter('maxSaturation', 'float', 1.0, 'Max Saturation', description='Maximum random saturation scale to apply.', fig='alJitterColor_maxSaturation', figc='Max Saturation at [1.0,2.0,4.0]')

ui.parameter('minGain', 'float', 0.5, 'Min Gain', description='Minimum random gain to apply.', fig='alJitterColor_minSaturation', figc='Min Gain at [1.0,0.5,0.0]')
ui.parameter('maxGain', 'float', 1.0, 'Max Gain', description='Maximum random gain to apply.', fig='alJitterColor_maxSaturation', figc='Max Gain at [1.0,1.5,2.0]')

ui.parameter('minHueOffset', 'float', -0.1, 'Min Hue Offset', description='Minimum hue offset to apply.', fig='alJitterColor_minHue', figc='Min Hue Offset at [0.0,-0.2,-0.4]')
ui.parameter('maxHueOffset', 'float', 0.1, 'Max Hue Offset', description='Maximum hue offset to apply.', fig='alJitterColor_maxHue', figc='Max Hue Offset at [0.0,0.2,0.4]')

ui.parameter('clamp', 'bool', True, 'Clamp', description='If enabled, the output color will be clamped to 0-1.')

ui.parameter('signal', 'float', 0.0, 'Signal', description='Signal to use to drive the randomization. This wants to be a unique value per object such as the object id.', mayane=True)
