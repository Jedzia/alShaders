import uigen

ui.shader({
   'name': 'cryptomatte_aov',
   'intro': '',
   'description': 'Cryptomatte AOV Writer (pass-through)',
   'output': 'rgb',
   'maya_name': 'cryptomatteAOV',
   'maya_classification': 'shader/surface',
   'maya_id':'0x00116421',
   'maya_swatch': True,
   'maya_matte': False,
   'maya_bump': False,
   'c4d_classification': 'texture',
   'c4d_menu': 'texture',
   'soft_name': 'CryptomatteAOV',
   'soft_classification': 'texture',
   'soft_version': 1,
   'help_url': 'http://www.anderslanglands.com/alshaders/cryptomatte_aov.html',
   'houdini_icon':'VOP_shadinglayer',
   'houdini_category':'AOV'
})

ui.parameter('passthrough', 'rgb', (0.0, 0.0, 0.0), 'Passthrough', description='Plug your surface in here to trigger shader evaluation', mayane=True)

with uigen.group(ui, 'AOVs', description='Use these parameters to change the name of the AOVs that the shader writes'):
   ui.parameter('crypto_asset_override', 'string', '', 'Crypto asset override', description='Override the cryptomatte asset string for this shader')
   ui.parameter('crypto_object_override', 'string', '', 'Crypto object override', description='Override the cryptomatte object string for this shader')
   ui.parameter('crypto_material_override', 'string', '', 'Crypto material override', description='Override the cryptomatte material string for this shader')
   ui.aov('aov_crypto_asset', 'rgb', 'Asset AOV name', description='Set the name of the cryptomatte asset AOV')
   ui.aov('aov_crypto_object', 'rgb', 'Object AOV name', description='Set the name of the cryptomatte object AOV')
   ui.aov('aov_crypto_material', 'rgb', 'Material AOV name', description='Set the name of the cryptomatte material AOV')
